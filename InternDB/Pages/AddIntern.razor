@page "/interns/add"
@attribute [Authorize(Roles = "Admin")]
@using InternDB.Data
@using InternDB.Services
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Forms
@inject InternService InternService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>Add Intern - InternDB</PageTitle>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h3>Add New Intern</h3>
                </div>
                <div class="card-body">
                    <EditForm Model="intern" OnValidSubmit="HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="text-danger" />
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="firstName" class="form-label">First Name *</label>
                                <InputText id="firstName" class="form-control" @bind-Value="intern.FirstName" />
                                <ValidationMessage For="@(() => intern.FirstName)" class="text-danger" />
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="lastName" class="form-label">Last Name *</label>
                                <InputText id="lastName" class="form-control" @bind-Value="intern.LastName" />
                                <ValidationMessage For="@(() => intern.LastName)" class="text-danger" />
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="email" class="form-label">Email *</label>
                                <InputText id="email" class="form-control" @bind-Value="intern.Email" />
                                <ValidationMessage For="@(() => intern.Email)" class="text-danger" />
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="phoneNumber" class="form-label">Phone Number</label>
                                <InputText id="phoneNumber" class="form-control" @bind-Value="intern.PhoneNumber" />
                                <ValidationMessage For="@(() => intern.PhoneNumber)" class="text-danger" />
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="department" class="form-label">Department *</label>
                                <InputSelect id="department" class="form-control" @bind-Value="intern.Department">
                                    <option value="">Select Department</option>
                                    <option value="IT">IT</option>
                                    <option value="CRC">CRC</option>
                                    <option value="Biomedical">Biomedical</option>
                                    <option value="HR">HR</option>
                                    <option value="Quality">Quality</option>
                                </InputSelect>
                                <ValidationMessage For="@(() => intern.Department)" class="text-danger" />
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="position" class="form-label">Position *</label>
                                <InputText id="position" class="form-control" @bind-Value="intern.Position" />
                                <ValidationMessage For="@(() => intern.Position)" class="text-danger" />
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="startDate" class="form-label">Start Date *</label>
                                <InputDate id="startDate" class="form-control" @bind-Value="intern.StartDate" />
                                <ValidationMessage For="@(() => intern.StartDate)" class="text-danger" />
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="endDate" class="form-label">End Date</label>
                                <InputDate id="endDate" class="form-control" @bind-Value="intern.EndDate" />
                                <ValidationMessage For="@(() => intern.EndDate)" class="text-danger" />
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="notes" class="form-label">Notes</label>
                            <InputTextArea id="notes" class="form-control" rows="3" @bind-Value="intern.Notes" />
                            <ValidationMessage For="@(() => intern.Notes)" class="text-danger" />
                        </div>
                        
                        <div class="d-flex justify-content-between">
                            <button type="button" class="btn btn-secondary" @onclick="Cancel">
                                Cancel
                            </button>
                            <button type="submit" class="btn btn-primary" disabled="@isSubmitting">
                                @if (isSubmitting)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                }
                                Add Intern
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Intern intern = new();
    private bool isSubmitting = false;
    
    protected override void OnInitialized()
    {
        intern.StartDate = DateTime.Today;
    }
    
    private async Task HandleValidSubmit()
    {
        isSubmitting = true;
        StateHasChanged();
        
        try
        {
            await InternService.CreateInternAsync(intern);
            await JSRuntime.InvokeAsync<object>("alert", "Intern added successfully!");
            Navigation.NavigateTo("/interns");
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeAsync<object>("alert", $"Error adding intern: {ex.Message}");
        }
        finally
        {
            isSubmitting = false;
            StateHasChanged();
        }
    }
    
    private void Cancel()
    {
        Navigation.NavigateTo("/interns");
    }
}
